name: FastAPI CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: gopal
          POSTGRES_PASSWORD: gopal
          POSTGRES_DB: hronboardinglanggraphdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Cache dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      # Run migrations (if Alembic is used)
      - name: Run DB migrations
        run: |
          cd backend
          alembic upgrade head

      # Run tests (if you have tests)
      - name: Run tests
        run: |
          cd backend
          pytest || echo "⚠️ No tests found, skipping tests"

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t fastapi-backend:latest ./backend
